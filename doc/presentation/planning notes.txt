In the talk, you should give an overview of your project and describe what you achieved.
If you have written software you should demonstrate it. 
Your task is to convince your listeners that your project work is interesting and of high quality.


1. Outline problem area(s)
distributing
scalability
netio perf

2. choices made

3. system functionality
4. system design specs 'under the hood'



Notes:
- Emphasize
    - Scale
    - e.g. Memcached
        - i.e. high perf, scalable things
		
Overview:

	modern digital age
	strategies for coping with scale
	low cost redundant distributred hardware

	Distributed systems and networks scalability are hard
	
	I built a library which handles:
		organising network
		mapping messages
		
		details
		lots of interdependant parts
		network
			implementation of simple async server
			managing connections
			+
			accept incoming and notify next layer
		
		nodelayer
			really juicy bit
			sha1 hash => ID
			
			ID space like a ring
			ID = place on ring
			=> nodes have an 'order'
			
			self organising
			
			
			for arbitrarily large and dynamic networks
			full list of nodes not viable
			
			list of known local nodes
			sparse list of further nodes
			
			id mapping
				ask next node all round ring till correct mapping found
					grows linearly can be slow and unnecessary
				list of further nodes useful
				find closest node we know about
				ask it, it does same until node found
			
			organise and stabilise
				a node can find its successor the same way as for ids^
				list of successors
					ask succ for pred incase new node between us
					notify (new) succ
				finger table
					list of nodes n0, n1, n2 ... with lowest id greater than id + 2^n
					the first one (and possibly more) = successor
				predecessor
					so nodes can find newly joined nodes after them
					
				periodically check and update all of them
			
			
		
	using:
		async io
			scalability by large numbers of connections simultaneously with low overhead
			
		
		
	self-organising
	decentralised
	peer-to-peer
	network
	
	uses:
		memcached
			scaling database etc. caching

































.